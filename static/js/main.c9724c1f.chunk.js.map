{"version":3,"sources":["redux/reducers/MainComponent/MainComponent.ts","config/server.ts","components/HomePage/HomePage.tsx","connector/google.ts","components/ErrorDisplay/ErrorDisplay.tsx","components/Loader/Loader.tsx","utils/constants.ts","utils/helpers.ts","components/Maps/MexMap/MexMap.tsx","components/Header/Header.tsx","components/OptionsPanel/SelectOptionsPanel/SelectOptionsPanel.tsx","components/OptionsPanel/MexOptionsPanel/MexOptionsPanel.tsx","components/OptionsPanel/YearsPanel/YearsPanel.tsx","components/DetailsPanel/ MissingDetailsPanel/ MissingDetailsPanel.tsx","components/Collection/MexicoCollection.tsx","routers/routes.tsx","components/PageNotFound/PageNotFound.tsx","components/NavBarHeader/NavBarHeader.tsx","components/NavBar/NavBar.tsx","redux/actions/MainComponent/MainComponent.ts","routers/Router.tsx","components/App/App.tsx","redux/store/configureStore.ts","serviceWorker.ts","index.tsx"],"names":["initialState","route","expand","reducer","state","action","type","frontConfig","serverName","process","backendHost","googleCredentialsFile","googleSpreadSheetId","HomePage","className","getDataFromSheetByState","sheet","data","Map","row","cellState","getCell","String","value","dataYears","col","cellYears","years","cell","set","getDataFromSheetByYears","states","push","loadGoogleSheet","a","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","credentials","private_key","loadInfo","sheetsById","loadCells","ErrorDisplay","message","statusCodeStr","statusCode","data-testid","Loader","useEffect","loading","document","querySelector","loadingMsg","textContent","letters","split","forEach","letter","i","span","createElement","style","animationDelay","length","append","MEX_CODES","get_hover_bg_color","getComputedStyle","documentElement","getPropertyValue","get_selected_bg_color","width","alignContent","textAlign","display","justifyContent","MexMap","selectStateHandler","selectedState","filteredStates","height","projection","projectionConfig","scale","center","geography","geographies","map","geo","stateName","properties","NAME_1","isStateSelected","key","rsmKey","onMouseDown","e","preventDefault","nativeEvent","button","onContextMenu","fill","includes","default","strokeWidth","stroke","outline","hover","pressed","Array","from","Object","entries","mexStateCenterCoordinates","code","isFiltered","coordinates","textAnchor","fontSize","fontWeight","cursor","onClick","get","marginTop","marginBottom","Header","title","subTitle","selectStyles","control","styles","backgroundColor","color","option","input","SelectOptionsPanel","label","options","selectionHandler","selectionValue","convertedOptions","val","isClearable","isLoading","onChange","newValue","actionMeta","MexOptionsPanel","yearOptions","stateOptions","selectYearHandler","selectedYear","selectOptionsPanelStyle","YearChoice","filtered","undefined","selected","isSelected","currentTarget","YearsPanel","filteredYears","flexWrap","opt","padding","triggerStyle","borderRadius","MissingDetailsPanel","useState","isOpen","setIsOpen","showMissingDetailsByYears","showMissingDetailsByStates","missingYears","filter","x","missingStats","open","onTriggerClosing","onTriggerOpening","trigger","borderStyle","borderColor","year","MexicoCollection","setIsLoading","error","setError","setStateOptions","setYearOptions","dataByYear","setDataByYear","dataByState","setDataByState","updateDataByYear","updateDataByState","setSelectedYear","setSelectedState","setFilteredStates","setFilteredYears","filteredStatesHandler","filteredYearsHandler","newStateValue","newYearValue","callBack","hasBeenCalled","setHasBeenCalled","useConstructor","console","log","rawDataByYear","rawDataByStateWithCondition","statesKeys","keys","yearsKeys","rawDataByState","stateWithCondition","navigationItems","iconClass","functionalComponent","childs","idChild","navigationFCItems","getFunctionalComponent","items","result","item","PageNotFound","NavBarHeader","expanded","styleNavItemText","verticalAlign","styleNavSubItemText","paddingLeft","NavBar","history","navBarTitle","useSelector","main","dispatch","useDispatch","onSelect","to","location","pathname","onSelectNavItem","setSelectedRoute","onToggle","setExpandNavBar","Toggle","Nav","renderNavItem","isChild","completeRoute","NavItem","eventKey","NavIcon","NavText","child","MainComponent","isExpandedNavBar","marginLeft","path","exact","component","Routes","render","store","createStore","combineReducers","MainComponentReducer","App","Component","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c9724c1f.chunk.js","sourcesContent":["import { StateType, ActionType } from './MainComponent.types';\n\nexport const initialState: StateType = {\n  route: 'home',\n  expand: true,\n};\n\nconst reducer = (state: StateType = initialState, action: ActionType) => {\n  switch (action.type) {\n    case 'SET_SELECTED_ROUTE':\n      if (action.route === state.route) return state;\n      return { ...state, route: action.route };\n    case 'SET_EXPAND_NAVBAR':\n      return { ...state, expand: action.expand };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","/**\n * Interface for FrontEnd application configuration settings\n *\n * @interface FrontendConfig\n */\ninterface FrontendConfig {\n  serverName: string;\n  backendHost: string;\n  googleCredentialsFile: string;\n  googleSpreadSheetId: string;\n}\n\nif (!process.env.REACT_APP_BACKEND_HOST) {\n  console.warn(\n    '.env file was not created, default values will used.'.toUpperCase(),\n  );\n}\n\n// default settings are for development environment\nconst frontConfig: FrontendConfig = {\n  serverName: process.env.REACT_APP_SERVER_NAME || 'Front-End app',\n  backendHost: process.env.REACT_APP_BACKEND_HOST || 'http://0.0.0.0:5050',\n  googleCredentialsFile: process.env.REACT_APP_GOOGLE_CREDENTIALS_FILE || '',\n  googleSpreadSheetId: process.env.REACT_APP_SPREADSHEET_ID || '',\n  // path.join(process.cwd(), './google-credentials.json'),\n};\n\nexport default frontConfig;\n","import React from 'react';\nimport frontConfig from 'src/config/server';\nimport './HomePage.css';\n\nconst HomePage: React.FC = () => (\n  <div className=\"HomePage\">\n    <h2>{frontConfig.serverName}</h2>\n    <h3>Description</h3>\n    {/* <h4>Instructions</h4> */}\n    <p>TBD</p>\n\n    <div className=\"AuthorContainer\">\n      <h3>Author</h3>\n      <ul>\n        <li>\n          Luis González Guzmán,{' '}\n          <span className=\"AuthorEmail\">luis.gonzalez.guzman.93@gmail.com</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n);\n\nexport default HomePage;\n","import frontConfig from 'src/config/server';\nimport credentials from 'src/credentials/google-credentials.json';\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\n\nconst SHEET_ID = '0';\nconst SHET_RANGE = 'B2:M34';\n\nconst STATE_START_INDEX = 2;\nconst STATE_END_INDEX = 33;\n\nconst YEARS_START_INDEX = 2;\nconst YEARS_END_INDEX = 12;\n\ninterface GoogleCellType {\n  value: any;\n  valueType: string;\n  formattedValue: string;\n  formula: string;\n  note: string;\n  hyperlink: string;\n}\n\nexport const getStatesFromSheet = (sheet) => {\n  const states: string[] = [];\n\n  for (let row = STATE_START_INDEX; row <= STATE_END_INDEX; row++) {\n    const cell: GoogleCellType = sheet.getCell(row, 1);\n    states.push(String(cell.value));\n  }\n  return states;\n};\n\nexport const getYearsFromSheet = (sheet) => {\n  const years: string[] = [];\n  for (let col = YEARS_START_INDEX; col <= YEARS_END_INDEX; col++) {\n    const cell: GoogleCellType = sheet.getCell(1, col);\n    years.push(String(cell.value));\n  }\n  return years;\n};\n\nexport const getDataFromSheetByState = (sheet) => {\n  const data = new Map<string, Map<string, number | undefined>>();\n\n  for (let row = STATE_START_INDEX; row <= STATE_END_INDEX; row++) {\n    const cellState: GoogleCellType = sheet.getCell(row, 1);\n    const state = String(cellState.value);\n\n    const dataYears = new Map<string, number | undefined>();\n    for (let col = YEARS_START_INDEX; col <= YEARS_END_INDEX; col++) {\n      const cellYears: GoogleCellType = sheet.getCell(1, col);\n      const years = String(cellYears.value);\n\n      const cell: GoogleCellType = sheet.getCell(row, col);\n      if (typeof cell.value == 'number') dataYears.set(years, cell.value);\n    }\n    data.set(state, dataYears);\n  }\n  return data;\n};\n\nexport const getDataFromSheetByYears = (sheet) => {\n  const data = new Map<string, string[]>();\n\n  for (let col = YEARS_START_INDEX; col <= YEARS_END_INDEX; col++) {\n    const cellYears: GoogleCellType = sheet.getCell(1, col);\n    const years = String(cellYears.value);\n\n    const states: string[] = [];\n    for (let row = STATE_START_INDEX; row <= STATE_END_INDEX; row++) {\n      const cellState: GoogleCellType = sheet.getCell(row, 1);\n      const state = String(cellState.value);\n\n      const cell: GoogleCellType = sheet.getCell(row, col);\n      if (typeof cell.value == 'number') states.push(state);\n    }\n    data.set(years, states);\n  }\n\n  return data;\n};\n\nexport const loadGoogleSheet = async () => {\n  const doc = new GoogleSpreadsheet(frontConfig.googleSpreadSheetId);\n  // SpreadsheetApp.getActive().getRange(\"Sheet1!A1:C6\")\n\n  // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication\n  await doc.useServiceAccountAuth({\n    client_email: credentials.client_email,\n    private_key: credentials.private_key,\n  });\n\n  // loads document properties and worksheets\n  await doc.loadInfo();\n\n  const sheet = doc.sheetsById[SHEET_ID]; // or use doc.sheetsById[id] or doc.sheetsByTitle[title]\n  await sheet.loadCells(SHET_RANGE);\n  return sheet;\n};\n","import React from 'react';\nimport { ErrorDisplayProps } from './ErrorDisplay.types';\nimport './ErrorDisplay.css';\n\nconst ErrorDisplay: React.FC<ErrorDisplayProps> = ({ message, statusCode }) => {\n  const statusCodeStr = statusCode || '';\n  return (\n    <div className=\"Error\">\n      <div className=\"Error-Label\" data-testid=\"ErrorLabel\">\n        <span> {`Error ${statusCodeStr}`} </span>\n      </div>\n      <div className=\"Error-Message\" data-testid=\"ErrorMessage\">\n        {message}\n      </div>\n    </div>\n  );\n};\n\nexport default ErrorDisplay;\n","import React, { useEffect } from 'react';\nimport './Loader.css';\n\nconst Loader: React.FC = () => {\n  useEffect(() => {\n    const loading = document.querySelector('.Loader') as Element;\n    if (loading !== null) {\n      const loadingMsg = loading.textContent || '';\n      const letters = loadingMsg.split('');\n      loading.textContent = '';\n      letters.forEach((letter, i) => {\n        const span = document.createElement('span');\n        span.className = 'Loader-Span';\n        span.textContent = letter;\n        span.style.animationDelay = `${i / loadingMsg.length}s`;\n        loading.append(span);\n      });\n    }\n  }, []);\n  return <div className=\"Loader\">Loading...</div>;\n};\n\nexport default Loader;\n","export const MEX_CODES = new Map([\n  ['AGS', 'Aguascalientes'],\n  ['BC', 'Baja California'],\n  ['BCS', 'Baja California Sur'],\n  ['CAMP', 'Campeche'],\n  ['CHIS', 'Chiapas'],\n  ['CHIH', 'Chihuahua'],\n  ['COAH', 'Coahuila'],\n  ['COL', 'Colima'],\n  ['DF', 'Distrito Federal'],\n  ['DGO', 'Durango'],\n  ['GTO', 'Guanajuato'],\n  ['GRO', 'Guerrero'],\n  ['HGO', 'Hidalgo'],\n  ['JAL', 'Jalisco'],\n  ['MEX', 'México'],\n  ['MICH', 'Michoacán'],\n  ['MOR', 'Morelos'],\n  ['NAY', 'Nayarit'],\n  ['NL', 'Nuevo León'],\n  ['OAX', 'Oaxaca'],\n  ['PUE', 'Puebla'],\n  ['QRO', 'Querétaro'],\n  ['QR', 'Quintana Roo'],\n  ['SLP', 'San Luis Potosí'],\n  ['SIN', 'Sinaloa'],\n  ['SON', 'Sonora'],\n  ['TAB', 'Tabasco'],\n  ['TAMPS', 'Tamaulipas'],\n  ['TLAX', 'Tlaxcala'],\n  ['VER', 'Veracruz'],\n  ['YUC', 'Yucatán'],\n  ['ZAC', 'Zacatecas'],\n]);\n","import { ReactNotificationOptions } from 'react-notifications-component';\n\nexport const timestampToDateStr = (timestamp: number): string => {\n  return new Date(timestamp * 1000).toDateString();\n};\n\nexport const sortNumber = (\n  a: number,\n  b: number,\n  ascending: boolean,\n): number => {\n  if (ascending) return a - b;\n  return b - a;\n};\n\nexport const createNotification = (\n  type: 'success' | 'danger' | 'info' | 'default' | 'warning',\n  message: string,\n  title?: string,\n): ReactNotificationOptions => {\n  const notificationDefault: ReactNotificationOptions = {\n    title,\n    message,\n    type,\n    insert: 'top',\n    container: 'top-right',\n    animationIn: ['animate__animated', 'animate__fadeIn'],\n    animationOut: ['animate__animated', 'animate__fadeOut'],\n    dismiss: {\n      duration: 3000,\n      pauseOnHover: true,\n    },\n  };\n  return notificationDefault;\n};\n\nexport const get_hover_bg_color = () =>\n  getComputedStyle(document.documentElement).getPropertyValue(\n    '--hover-item-bg-color',\n  );\nexport const get_default_bg_color = () =>\n  getComputedStyle(document.documentElement).getPropertyValue(\n    '--default-item-bg-color',\n  );\nexport const get_selected_bg_color = () =>\n  getComputedStyle(document.documentElement).getPropertyValue(\n    '--selected-item-bg-color',\n  );\nexport const get_filtered_bg_color = () =>\n  getComputedStyle(document.documentElement).getPropertyValue(\n    '--filtered-item-bg-color',\n  );\n\nexport const get_hover_font_color = () =>\n  getComputedStyle(document.documentElement).getPropertyValue(\n    '--hover-item-font-color',\n  );\nexport const get_default_font_color = () =>\n  getComputedStyle(document.documentElement).getPropertyValue(\n    '--default-item-font-color',\n  );\nexport const get_selected_font_color = () =>\n  getComputedStyle(document.documentElement).getPropertyValue(\n    '--selected-item-font-color',\n  );\nexport const get_filtered_font_color = () =>\n  getComputedStyle(document.documentElement).getPropertyValue(\n    '--filtered-item-font-color',\n  );\n","import React from 'react';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n} from 'react-simple-maps';\n\nimport mexStateCenterCoordinates from 'src/components/Maps/MexMap/MexStateCenterCoordinates.json';\nimport { MEX_CODES } from 'src/utils/constants';\nimport {\n  get_default_bg_color,\n  get_filtered_bg_color,\n  get_filtered_font_color,\n  get_hover_bg_color,\n  get_selected_bg_color,\n} from 'src/utils/helpers';\n\nconst GEO_URL =\n  'https://gist.githubusercontent.com/leenoah1/535b386ec5f5abdb2142258af395c388/raw/a045778d28609abc036f95702d6a44045ae7ca99/geo-data.json';\n\nconst style: React.CSSProperties = {\n  // borderStyle: 'double',\n  width: '70%',\n  alignContent: 'center',\n  textAlign: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n};\n\nexport interface MexMapProps {\n  selectStateHandler: (state: string) => void;\n  selectedState: string;\n  filteredStates: string[];\n}\n\nexport interface Geo {\n  stateName: string;\n  coordinates: number[][];\n}\n\nexport const MexMap: React.FC<MexMapProps> = ({\n  selectStateHandler,\n  selectedState,\n  filteredStates,\n}) => {\n  return (\n    <div\n      className=\"MexMap\"\n      style={{ width: '100%', display: 'flex', justifyContent: 'center' }}\n    >\n      <div style={style}>\n        <ComposableMap\n          width={550}\n          height={400}\n          projection=\"geoAlbers\"\n          projectionConfig={{\n            scale: 1100,\n            center: [-5, 24.6],\n          }}\n        >\n          <Geographies geography={GEO_URL}>\n            {({ geographies }) =>\n              geographies.map((geo) => {\n                const stateName = geo.properties.NAME_1;\n                const isStateSelected = selectedState === stateName;\n                return (\n                  <Geography\n                    key={geo.rsmKey}\n                    geography={geo}\n                    onMouseDown={(e) => {\n                      e.preventDefault();\n                      if (e.nativeEvent.button === 0) {\n                        // Left click\n                        selectStateHandler(stateName);\n                      } else if (e.nativeEvent.button === 2) {\n                        // Right click\n                        selectStateHandler('');\n                      }\n                    }}\n                    onContextMenu={(e) => {\n                      e.preventDefault();\n                    }}\n                    fill={\n                      isStateSelected\n                        ? get_selected_bg_color()\n                        : filteredStates.includes(stateName)\n                        ? get_filtered_bg_color()\n                        : get_default_bg_color()\n                    }\n                    style={{\n                      default: {\n                        strokeWidth: 1,\n                        stroke: get_hover_bg_color(),\n                        outline: 'none',\n                      },\n                      hover: {\n                        fill: get_hover_bg_color(),\n                        outline: 'none',\n                      },\n                      pressed: {\n                        fill: get_hover_bg_color(),\n                        outline: 'none',\n                      },\n                    }}\n                  />\n                );\n              })\n            }\n          </Geographies>\n          {Array.from(new Map(Object.entries(mexStateCenterCoordinates))).map(\n            ([stateName, { code, center }], key) => {\n              const isFiltered = filteredStates.includes(stateName);\n              return (\n                <Marker\n                  key={key}\n                  coordinates={center}\n                  // onMouseDown={(e)=>{console.log(e)}}\n                  onContextMenu={(e) => {\n                    e.preventDefault();\n                  }}\n                >\n                  <text\n                    textAnchor=\"middle\"\n                    fill={\n                      isFiltered\n                        ? get_filtered_font_color()\n                        : get_hover_bg_color()\n                    }\n                    fontSize={4}\n                    fontWeight=\"bold\"\n                    style={{ cursor: 'default' }}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      const stateName = MEX_CODES.get(code) || '';\n                      selectStateHandler(stateName);\n                    }}\n                  >\n                    {code}\n                  </text>\n                </Marker>\n              );\n            },\n          )}\n        </ComposableMap>\n      </div>\n    </div>\n  );\n};\n\n// const getPolygonCenter = (geo) => {\n//   const geoCoordinates = geo.geometry.coordinates;\n//   const coordinates: number[][] = [];\n//   flatArray(geoCoordinates, coordinates);\n//   const coordinatesCenter = calculatePolygonCenter(coordinates);\n//   return coordinatesCenter;\n// };\n\n// const flatArray = (array: Array<any>, result: number[][]) => {\n//   if (\n//     array.length === 2 &&\n//     !Array.isArray(array[0]) &&\n//     !Array.isArray(array[1])\n//   ) {\n//     result.push(array);\n//     return;\n//   }\n//   array.forEach((elem) => {\n//     flatArray(elem, result);\n//   });\n// };\n\n// const calculatePolygonCenter = (arr: number[][]) => {\n//   const x: number[] = arr.map((xy) => xy[0]);\n//   const y: number[] = arr.map((xy) => xy[1]);\n//   const cx: number = (Math.min(...x) + Math.max(...x)) / 2;\n//   const cy: number = (Math.min(...y) + Math.max(...y)) / 2;\n//   return [cx, cy];\n// };\n","import React from 'react';\n\nconst style: React.CSSProperties = {\n  // borderStyle: 'double',\n  width: '100%',\n  justifyContent: 'center',\n  marginTop: '1%',\n  marginBottom: '1.5%',\n};\n\nexport interface TitleProps {\n  title: string;\n  subTitle?: string;\n}\n\nconst Header = ({ title, subTitle }: TitleProps) => {\n  return (\n    <div className=\"Header\" style={style}>\n      <h2>{title}</h2>\n      {/* <br/> */}\n      <h4>{subTitle}</h4>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Select, { ActionMeta, StylesConfig } from 'react-select';\n\nconst fontSize = 'x-large';\nconst selectStyles: StylesConfig = {\n  control: (styles) => ({\n    ...styles,\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize,\n  }),\n  option: (styles) => ({\n    ...styles,\n    backgroundColor: 'white',\n    color: 'black',\n    fontSize,\n  }),\n  input: (styles) => ({ ...styles, fontSize }),\n};\n\nexport type OptionsSelect = {\n  value: string;\n  label: string;\n};\n\nexport interface SelectOptionsPanelProps {\n  label: string;\n  options?: Array<string>;\n  style?: React.CSSProperties;\n  selectionHandler: (state: string) => void;\n  selectionValue: string;\n}\n\nconst convertArrayToOptions = (values: Array<string>) => {\n  return values.map((val) => ({ value: val, label: val }));\n};\n\nconst SelectOptionsPanel = ({\n  label,\n  style,\n  options,\n  selectionHandler,\n  selectionValue,\n}: SelectOptionsPanelProps) => {\n  const convertedOptions = convertArrayToOptions(options || []);\n\n  return (\n    <div className=\"SelectOptionsPanel\" style={style}>\n      <label>{label}</label>\n      <Select\n        options={convertedOptions}\n        isClearable\n        isLoading={false}\n        styles={selectStyles}\n        value={{ value: selectionValue, label: selectionValue }}\n        onChange={(newValue: any, actionMeta: ActionMeta<unknown>) => {\n          selectionHandler(!!newValue ? newValue.value : '');\n          return newValue;\n        }}\n      />\n    </div>\n  );\n};\n\nexport default SelectOptionsPanel;\n","import React from 'react';\nimport SelectOptionsPanel from '../SelectOptionsPanel';\n\nconst style: React.CSSProperties = {\n  // borderStyle: 'double',\n  width: '100%',\n  marginTop: '1.5%',\n  marginBottom: '1.5%',\n  display: 'flex',\n  justifyContent: 'center',\n};\n\nexport interface MexOptionsPanelProps {\n  selectedState: string;\n  selectedYear: string;\n  yearOptions: Array<string>;\n  stateOptions: Array<string>;\n  selectYearHandler: (year: string) => void;\n  selectStateHandler: (state: string) => void;\n}\n\nconst MexOptionsPanel = ({\n  yearOptions,\n  stateOptions,\n  selectYearHandler,\n  selectStateHandler,\n  selectedState,\n  selectedYear,\n}: MexOptionsPanelProps) => {\n  const selectOptionsPanelStyle: React.CSSProperties = {\n    width: '30%',\n    textAlign: 'center',\n  };\n  return (\n    <div className=\"MexOptionsPanel\" style={style}>\n      <div style={{ ...style, justifyContent: 'space-between', width: '70%' }}>\n        <SelectOptionsPanel\n          label={'State:'}\n          style={selectOptionsPanelStyle}\n          options={stateOptions}\n          selectionHandler={selectStateHandler}\n          selectionValue={selectedState}\n        />\n        <SelectOptionsPanel\n          label={'Year:'}\n          style={selectOptionsPanelStyle}\n          options={yearOptions}\n          selectionHandler={selectYearHandler}\n          selectionValue={selectedYear}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MexOptionsPanel;\n","import React from 'react';\n\nexport interface YearsPanelProps {\n  selectedYear: string;\n  yearOptions: Array<string>;\n  filteredYears: Array<string>;\n  selectYearHandler: (year: string) => void;\n}\n\nconst YearsPanel = ({\n  selectedYear,\n  yearOptions,\n  filteredYears,\n  selectYearHandler,\n}: YearsPanelProps) => {\n  return (\n    <div\n      className=\"YearsPanel\"\n      style={{\n        display: 'inline-block',\n        textAlign: 'center',\n        flexWrap: 'wrap',\n        width: '100%',\n      }}\n    >\n      <label>{'Year: '}</label>\n      {yearOptions.map((opt, key) => (\n        <YearChoice\n          label={opt}\n          key={key}\n          selectionHandler={selectYearHandler}\n          isFiltered={filteredYears.includes(opt)}\n          isSelected={selectedYear === opt}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport interface YearsChoiceProps {\n  label: string;\n  isFiltered: boolean;\n  isSelected: boolean;\n  selectionHandler: (year: string) => void;\n}\n\nconst YearChoice = ({\n  label,\n  selectionHandler,\n  isFiltered,\n  isSelected,\n}: YearsChoiceProps) => {\n  const filtered = isFiltered ? 'Filtered' : undefined;\n  const selected = isSelected ? 'Selected' : undefined;\n  return (\n    <button\n      className={`YearChoice ${filtered} ${selected}`}\n      value={label}\n      onClick={(e) => {\n        e.preventDefault();\n        selectionHandler(e.currentTarget.value);\n      }}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default YearsPanel;\n","import React, { useState } from 'react';\nimport Collapsible from 'react-collapsible';\nimport { get_selected_bg_color, get_selected_font_color } from 'src/utils';\n\nexport interface MissingDetailsPanelProps {\n  filteredYears: string[];\n  filteredStates: string[];\n  yearOptions: string[];\n  stateOptions: string[];\n  selectedState: string;\n  selectedYear: string;\n}\n\nconst style: React.CSSProperties = {\n  width: '100%',\n  alignContent: 'center',\n  textAlign: 'center',\n  display: 'block',\n  justifyContent: 'center',\n  padding: '10px 0px 50px 0px',\n  fontSize: '16px',\n};\nconst triggerStyle = {\n  fontSize: '16px',\n  padding: '10px 30px',\n  width: '100%',\n  borderRadius: '25px',\n};\nconst MissingDetailsPanel = ({\n  filteredStates,\n  filteredYears,\n  yearOptions,\n  stateOptions,\n  selectedState,\n  selectedYear,\n}: MissingDetailsPanelProps) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const showMissingDetailsByYears = filteredYears.length > 0;\n  const showMissingDetailsByStates = filteredStates.length > 0;\n\n  let missingYears = yearOptions.filter((x) => !filteredYears.includes(x));\n  let missingStats = stateOptions.filter((x) => !filteredStates.includes(x));\n\n  return (\n    <div className=\"MissingDetailsPanel\" style={style}>\n      <Collapsible\n        open={isOpen}\n        onTriggerClosing={() => {\n          setIsOpen(false);\n        }}\n        onTriggerOpening={() => {\n          setIsOpen(true);\n        }}\n        trigger={`${isOpen ? 'Hide' : 'See'} missing plates details`}\n        triggerStyle={{\n          ...triggerStyle,\n          backgroundColor: get_selected_bg_color(),\n        }}\n      >\n        <div\n          style={{\n            borderStyle: 'double',\n            borderColor: get_selected_font_color(),\n          }}\n        >\n          {showMissingDetailsByYears && (\n            <>\n              <p>\n                <strong>{`${selectedState} state: `}</strong>\n                {`${filteredYears.length} plates in the collection, ${missingYears.length} missing.`}\n              </p>\n              <p>\n                {missingYears.map((year, key) => (\n                  <span key={key} className=\"YearChoice MissingItem\">\n                    {year}\n                  </span>\n                ))}\n              </p>\n            </>\n          )}\n          {showMissingDetailsByStates && (\n            <>\n              <p>\n                <strong>{`${selectedYear} year: `}</strong>\n                {`${filteredStates.length} plates in the collection, ${missingStats.length} missing.`}\n              </p>\n              <p>\n                {missingStats.map((state, key) => (\n                  <span key={key} className=\"YearChoice MissingItem\">\n                    {state}\n                  </span>\n                ))}\n              </p>\n            </>\n          )}\n        </div>\n      </Collapsible>\n    </div>\n  );\n};\n\nexport default MissingDetailsPanel;\n","import React, { useState } from 'react';\nimport {\n  getDataFromSheetByState,\n  getDataFromSheetByYears,\n  loadGoogleSheet,\n} from 'src/connector/google';\nimport ErrorDisplay from '../ErrorDisplay';\nimport Loader from '../Loader';\nimport { MexMap } from '../Maps/MexMap';\nimport Header from '../Header';\nimport MexOptionsPanel from '../OptionsPanel/MexOptionsPanel';\nimport YearsPanel from '../OptionsPanel/YearsPanel';\nimport MissingDetailsPanel from '../DetailsPanel/ MissingDetailsPanel';\n\nconst useConstructor = (callBack: () => void) => {\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\n  if (hasBeenCalled) return;\n  callBack();\n  setHasBeenCalled(true);\n};\n\nconst MexicoCollection: React.FC = () => {\n  // Component status variables\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState({\n    statusCode: -1,\n    message: '',\n  });\n\n  const [stateOptions, setStateOptions] = useState(new Array<string>());\n  const [yearOptions, setYearOptions] = useState(new Array<string>());\n\n  // Data variables\n  const [dataByYear, setDataByYear] = useState(new Map<string, string[]>());\n  const [dataByState, setDataByState] = useState(new Map<string, string[]>());\n\n  const updateDataByYear = (year: string, states: string[]) => {\n    setDataByYear(dataByYear.set(year, states));\n  };\n  const updateDataByState = (state: string, years: string[]) => {\n    setDataByState(dataByYear.set(state, years));\n    // setDataByState(dataByState.set)\n  };\n\n  // Data filter variables\n  const [selectedYear, setSelectedYear] = useState('68-69');\n  const [selectedState, setSelectedState] = useState('');\n\n  const [filteredStates, setFilteredStates] = useState(new Array<string>());\n  const [filteredYears, setFilteredYears] = useState(new Array<string>());\n\n  // Handlers\n  const filteredStatesHandler = (year: string, data: Map<string, string[]>) => {\n    setFilteredStates(Array.from(data.get(year) || []));\n  };\n\n  const filteredYearsHandler = (state: string, data: Map<string, string[]>) => {\n    setFilteredYears(Array.from(data.get(state) || []));\n  };\n\n  const selectStateHandler = (newStateValue: string) => {\n    if (newStateValue === selectedState) return;\n\n    // Update selected values\n    const newYearValue = '';\n    setSelectedState(newStateValue);\n    setSelectedYear(newYearValue);\n\n    // Update filters\n    filteredStatesHandler(newYearValue, dataByYear);\n    filteredYearsHandler(newStateValue, dataByState);\n  };\n\n  const selectYearHandler = (newYearValue: string) => {\n    if (newYearValue === selectedYear) return;\n\n    // Update selected values\n    const newStateValue = '';\n    setSelectedYear(newYearValue);\n    setSelectedState(newStateValue);\n\n    // Update filters\n    filteredStatesHandler(newYearValue, dataByYear);\n    filteredYearsHandler(newStateValue, dataByState);\n  };\n\n  // Constructor\n  useConstructor(async () => {\n    try {\n      console.log('Get Information from Google Spreadsheet');\n      const sheet = await loadGoogleSheet();\n\n      const rawDataByYear = getDataFromSheetByYears(sheet);\n      const rawDataByStateWithCondition = getDataFromSheetByState(sheet);\n\n      const statesKeys: string[] =\n        Array.from(rawDataByStateWithCondition.keys()) || [];\n      const yearsKeys: string[] = Array.from(rawDataByYear.keys()) || [];\n\n      const rawDataByState = new Map(\n        statesKeys.map((state: string) => {\n          const stateWithCondition: Map<string, number | undefined> =\n            rawDataByStateWithCondition.get(state) || new Map();\n          const years: string[] = Array.from(stateWithCondition.keys());\n          return [state, years];\n        }),\n      );\n\n      // Set all the options\n      setStateOptions(statesKeys);\n      setYearOptions(yearsKeys);\n\n      // Update data variable\n      rawDataByYear.forEach((states: string[], year: string) => {\n        updateDataByYear(year, states);\n      });\n      rawDataByState.forEach((years: string[], state: string) => {\n        updateDataByState(state, years);\n      });\n\n      // Update filters\n      filteredStatesHandler(selectedYear, rawDataByYear);\n      filteredYearsHandler(selectedState, rawDataByState);\n\n      // Print info\n      console.log('rawDataByYear: ', rawDataByYear);\n      console.log('rawDataByState: ', rawDataByState);\n      // console.log('rawDataByState: ', rawDataByStateWithCondition);\n    } catch (error) {\n      console.error(error);\n      setError({\n        statusCode: 500,\n        message: `Unable to load Google credentials: ${error}`,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  });\n\n  const subTitle = `México${selectedState && ` - ${selectedState}`}${\n    selectedYear && ` (${selectedYear})`\n  }`;\n  return !!error.message ? (\n    <ErrorDisplay message={error.message} statusCode={error.statusCode} />\n  ) : (\n    <div className=\"MexicoCollection\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <Header title=\"License Plates Collection\" subTitle={subTitle} />\n          <MexOptionsPanel\n            selectedYear={selectedYear}\n            selectedState={selectedState}\n            yearOptions={yearOptions}\n            stateOptions={stateOptions}\n            selectYearHandler={selectYearHandler}\n            selectStateHandler={selectStateHandler}\n          />\n          <YearsPanel\n            selectedYear={selectedYear}\n            yearOptions={yearOptions}\n            selectYearHandler={selectYearHandler}\n            filteredYears={filteredYears}\n          />\n          <MexMap\n            selectStateHandler={selectStateHandler}\n            selectedState={selectedState}\n            filteredStates={filteredStates}\n          />\n          <MissingDetailsPanel\n            selectedState={selectedState}\n            selectedYear={selectedYear}\n            filteredYears={filteredYears}\n            yearOptions={yearOptions}\n            filteredStates={filteredStates}\n            stateOptions={stateOptions}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default MexicoCollection;\n","import React from 'react';\n// import CreateGame from 'src/components/CreateGame';\n// import GamesBoard from 'src/components/GamesBoard';\nimport HomePage from 'src/components/HomePage';\nimport MexicoCollection from 'src/components/Collection';\n// import PlayGame from 'src/components/PlayGame';\nimport { AbstractNavItem, NavItem } from './Router.types';\n\nconst navigationItems: NavItem[] = [\n  {\n    title: 'Home',\n    route: '',\n    iconClass: 'fa fa-fw fa-home',\n    functionalComponent: () => <HomePage />,\n  },\n  {\n    title: 'Home',\n    route: 'license-plates-gallery',\n    iconClass: 'fa fa-fw fa-home',\n    functionalComponent: () => <HomePage />,\n  },\n  {\n    title: 'Collection',\n    route: 'collection',\n    iconClass: 'fa fw fa-earth-americas',\n    childs: [\n      {\n        title: 'México',\n        idChild: 'collection.mexico',\n        route: 'collection/mexico',\n        functionalComponent: () => <MexicoCollection />,\n      },\n    ],\n  },\n  // {\n  //   title: 'Collection',\n  //   route: 'collection',\n  //   iconClass: 'fa fw fa-earth-americas',\n  //   childs: [\n  //     {\n  //       title: 'Personal',\n  //       idChild: 'collection.personal',\n  //       route: 'collection/personal',\n  //       functionalComponent: () => <GamesBoard finished={true} />,\n  //     },\n  //   ],\n  // },\n  // {\n  //   title: 'Shop',\n  //   route: 'shop',\n  //   iconClass: 'fa fa-fw fa-cart-shopping',\n  //   functionalComponent: () => <CreateGame />,\n  // },\n  // {\n  //   title: 'Contributors',\n  //   route: 'contributors',\n  //   iconClass: 'fa fa-fw fa-users',\n  //   functionalComponent: () => <PlayGame />,\n  // },\n];\n\nconst getFunctionalComponent = (\n  items: AbstractNavItem[],\n  result: AbstractNavItem[],\n): void => {\n  for (const item of items) {\n    if (item.functionalComponent) {\n      // Add the FC\n      result.push(item);\n    }\n    if (item.childs) {\n      // Add the child FC\n      getFunctionalComponent(item.childs, result);\n    }\n  }\n};\n\nconst navigationFCItems: AbstractNavItem[] = [];\ngetFunctionalComponent(navigationItems, navigationFCItems);\n\nexport { navigationItems, navigationFCItems };\n","import React from 'react';\nimport './PageNotFound.css';\nimport ErrorDisplay from '../ErrorDisplay';\n\nconst PageNotFound: React.FC = () => (\n  <div className=\"PageNotFound\" data-testid=\"PageNotFound\">\n    <ErrorDisplay message={`Page not found`} statusCode={404} />\n  </div>\n);\n\nexport default PageNotFound;\n","import React from 'react';\nimport { NavBarHeaderProps } from './NavBarHeader.types';\nimport './NavBarHeader.css';\n\nconst NavBarHeader: React.FC<NavBarHeaderProps> = ({ title, expanded }) => {\n  return (\n    <div\n      data-testid=\"headerContainer\"\n      className=\"NavBarHeader\"\n      style={{ display: expanded ? 'block' : 'none' }}\n    >\n      <div data-testid=\"headerTitle\" className=\"NavBarHeader-Title\">\n        {title}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBarHeader;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport SideNav from '@trendmicro/react-sidenav';\nimport {\n  setSelectedRoute,\n  setExpandNavBar,\n} from 'src/redux/actions/MainComponent';\nimport { NavItem } from 'src/routers/Router.types';\nimport NavBarHeader from 'src/components/NavBarHeader';\nimport { NavBarProps, OnSelectNavItem, RenderNavItem } from './NavBar.types';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport './NavBar.css';\nimport { navigationItems } from 'src/routers';\n\nconst styleNavItemText = { fontSize: '1.3em', verticalAlign: 'middle' };\nconst styleNavSubItemText = {\n  paddingLeft: 10,\n  fontSize: '1.0em',\n  verticalAlign: 'middle',\n};\n\nconst onSelectNavItem: OnSelectNavItem = (selected, history) => {\n  const {\n    location: { pathname },\n  } = history;\n  const to = '/' + selected;\n  if (pathname !== to) history.push(to);\n};\n\nconst renderNavItem: RenderNavItem = (item: NavItem, isChild = false) => {\n  const completeRoute = item.route;\n  const childs = item.childs || [];\n  return (\n    <SideNav.NavItem\n      eventKey={completeRoute}\n      key={completeRoute}\n      data-testid={completeRoute}\n    >\n      {item.iconClass && (\n        <SideNav.NavIcon>\n          <i className={`${item.iconClass} NavBar-Icon`} />\n        </SideNav.NavIcon>\n      )}\n      <SideNav.NavText style={isChild ? styleNavSubItemText : styleNavItemText}>\n        {item.title}\n      </SideNav.NavText>\n      {childs.map((child) => renderNavItem(child, true))}\n    </SideNav.NavItem>\n  );\n};\n\nconst NavBar: React.FC<NavBarProps> = ({ history, navBarTitle }) => {\n  const { route, expand } = useSelector((state: any) => state.main);\n  const dispatch = useDispatch();\n\n  return (\n    <SideNav\n      expanded={expand}\n      onSelect={(selected) => {\n        onSelectNavItem(selected, history);\n        dispatch(setSelectedRoute(selected));\n      }}\n      onToggle={(expanded) => {\n        dispatch(setExpandNavBar(expanded));\n      }}\n    >\n      <SideNav.Toggle data-testid=\"toggleNavBar\" />\n      <NavBarHeader expanded={expand} title={navBarTitle} />\n      <SideNav.Nav selected={route}>\n        {navigationItems.map((item) => renderNavItem(item))}\n      </SideNav.Nav>\n    </SideNav>\n  );\n};\n\nexport default NavBar;\n","import {\n  SetSelectedRouteType,\n  SetExpandNavBarType,\n} from './MainComponent.types';\n\nexport const setSelectedRoute: SetSelectedRouteType = (route: string) => ({\n  type: 'SET_SELECTED_ROUTE',\n  route,\n});\n\nexport const setExpandNavBar: SetExpandNavBarType = (expand: boolean) => ({\n  type: 'SET_EXPAND_NAVBAR',\n  expand,\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { RouterProps, MainComponentProps } from './Router.types';\nimport { navigationFCItems } from './routes';\nimport PageNotFound from '../components/PageNotFound';\nimport NavBar from '../components/NavBar';\nimport './Router.css';\n\nconst MAX_NAVBAR_MARGIN = 240;\nconst MIN_NAVBAR_MARGIN = 64;\n\nconst MainComponent: React.FC<MainComponentProps> = ({ isExpandedNavBar }) => {\n  return (\n    <div\n      className=\"MainComponent\"\n      data-testid=\"mainComponent\"\n      style={{\n        marginLeft: isExpandedNavBar ? MAX_NAVBAR_MARGIN : MIN_NAVBAR_MARGIN,\n      }}\n    >\n      <Switch>\n        {navigationFCItems.map((item, key) => (\n          <Route\n            key={key}\n            path={`/${item.route}`}\n            exact={true}\n            component={item.functionalComponent}\n          />\n        ))}\n        <Route component={() => <PageNotFound />} />\n      </Switch>\n    </div>\n  );\n};\n\nconst Routes: React.FC<RouterProps> = () => {\n  const { main } = useSelector((state) => state);\n  const { expand: isExpandedNavBar } = main;\n\n  return (\n    <BrowserRouter>\n      <Route\n        render={({ history }) => <NavBar history={history} navBarTitle={''} />}\n      />\n      <div className=\"Container\">\n        <MainComponent isExpandedNavBar={isExpandedNavBar} />\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React, { useState } from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from 'src/redux/store';\nimport Routes from 'src/routers';\nimport ReactNotification from 'react-notifications-component';\nimport Loader from '../Loader';\nimport ErrorDisplay from '../ErrorDisplay';\nimport 'react-notifications-component/dist/theme.css';\nimport './App.css';\n\nconst store = configureStore();\n\nconst useConstructor = (callBack: () => void) => {\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\n  if (hasBeenCalled) return;\n  callBack();\n  setHasBeenCalled(true);\n};\n\nconst App: React.FC = () => {\n  const [error, setError] = useState({\n    statusCode: -1,\n    message: '',\n  });\n  const [isLoading, setIsLoading] = useState(true);\n\n  useConstructor(async () => {\n    // try {\n    // await connector.checkBackendHealth();\n    // } catch (error) {\n    //   setError({\n    //     statusCode: error.statusCode,\n    //     message: error.message,\n    //   });\n    // } finally {\n    setIsLoading(false);\n    // }\n  });\n\n  const isError = !!error.message;\n  const Component = isError ? (\n    <ErrorDisplay message={error.message} statusCode={error.statusCode} />\n  ) : (\n    <Routes />\n  );\n\n  return (\n    <Provider store={store}>\n      <ReactNotification />\n      <div className=\"App\" data-testid=\"App\">\n        {isLoading ? <Loader /> : Component}\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { createStore, combineReducers } from 'redux';\nimport MainComponentReducer from '../reducers/MainComponent';\n\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      main: MainComponentReducer,\n    }),\n  );\n  // store.subscribe(() => { console.log(store.getState().topicDetails) });\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d{1,2})){3}$/,\n    ),\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (!installingWorker) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType && contentType.includes('javascript'))\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'src/components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}